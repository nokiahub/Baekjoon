//자신이 포함되는 수열과 포함되지 않는 수열을 배열로 나타낸다.
//memo[x][y]에서 x=수열의 길이, y=포함 or 포함되지 않음.
//자신이 포함되는 경우, 자신의 앞의 숫자가 자신보다 작아야한다. 자신보다 작은 수 전체를 검사하여 최대값 탐색 후, 자기자신인 1을 더한다.
//자신이 포함되지 않는 경우, 자신의 전 인덱스의 결과 중 최대값 max(포함, 포함되지 않음) 을 그대로 물려받는다.

#include <iostream>
#include <algorithm>
using namespace std;
int a[1001], memo[1001][2];
int main() {
	int n;
	cin >> n;
	for (int i = 1; i <= n; i++) cin >> a[i];
	memo[1][1] = 1; memo[1][0] = 0;
	for (int i = 2; i <= n; i++) {
		int tmp = 0;
		for (int k = i-1; k >= 1; k--) {
			if (a[k] < a[i]) {
				int t = memo[k][1];
				if (t > tmp)  tmp = t;
			}
		}
		memo[i][1] = tmp+1;
		memo[i][0] = max(memo[i - 1][1], memo[i - 1][0]);
	}
	cout << max(memo[n][0], memo[n][1]);
	return 0;
}
