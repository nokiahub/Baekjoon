
//좌측상단의 한 지점에서부터 최대거리만 구하면됨
//DFS

#include <iostream>
#include <string>
using namespace std;
char a[20][20];
bool check[26];
int dx[4] = { -1, 0, 1, 0 },  dy[4] = { 0, 1, 0, -1 };
int r, c, mx=0;
void dfs(int x, int y, int cnt) {
	cnt = cnt + 1;
	if (cnt > mx) mx = cnt;

	char node = a[x][y];
	check[node - 65] = true;
	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];

		if (nx >= 0 && nx < r &&ny >= 0 && ny < c) {
			int nextNode = a[nx][ny];
			if (check[nextNode - 65])continue;
			check[nextNode - 65] = true;
			dfs(nx, ny, cnt);
			check[nextNode - 65] = false;
		}
	}
	return;
}
int main() {
	cin >> r >> c;
	for (int i = 0; i < r; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < c; j++) {
			a[i][j]= s[j];
		}
	}
	dfs(0, 0, 0);
	cout << mx<<endl;
	return 0;
}
