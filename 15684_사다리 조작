//더 간단하게 다시 짜야 

#include <iostream>
#define N_S 11
#define H_S 31
using namespace std;

int n, m, h, total;
bool check[N_S*H_S], ladder[H_S][N_S][2], answer = false;

bool is_possible(){
    memset(ladder, false, sizeof(ladder));
    int x, a, b;
    for(int i = 1 ; i <= total ; i++){
        if(check[i]){
            x = i;
            a = x / (n - 1) + 1;
            b = x % (n - 1);
            if(b == 0){
                a = a - 1;
                b = n - 1;
            }
            ladder[a][b][1] = true;
            ladder[a][b + 1][0] = true;
        }
    }
    
    int dest = h + 1;
    for(int i = 1 ; i <= n ; i++){
        int cx = 0;
        int cy = i;
        
        while(cx != dest){
            if(ladder[cx][cy][0]){
                cy = cy - 1;
            }else if(ladder[cx][cy][1]){
                cy = cy + 1;
            }
            cx++;
        }
        if(cy != i)return false;
    }
    return true;
}

void pick_ladder(int index, int selected, int k){
    if(selected == k){
        bool ans = is_possible();
        if(ans) answer = true;
        return;
    }
    
    if(index > total) return;
    
    bool f1 = index % (n - 1) == 1;
    bool f2 = (index + 1 <= total) && !check[index + 1];
    
    bool f3 = index % (n - 1) == 0;
    bool f4 = (index - 1 >= 1) && !check[index - 1];
    
    
    if((!check[index] && f1 && f2) || (!check[index] && f3 && f4) ||
       (!check[index]&& !f1 && !f3 && f2 && f4 ) || (!check[index] &&n - 1 == 1)){
        
        check[index] = true;
        pick_ladder(index + 1, selected + 1, k);
        check[index] = false;
        pick_ladder(index + 1, selected, k);
        
    }else{
        pick_ladder(index + 1, selected, k);
    }
    return;
}

int main(){
    cin >> n >> m >> h;
    for(int i = 0 ; i < m ; i++){
        int a, b;
        cin >> a >> b;
        
        int y = a - 1, x = b;
        int index = y*(n - 1) + x;
        check[index] = true;
    }
    
    total = (n - 1)*h;
    for(int i = 0 ; i <= 3 ; i++){
        pick_ladder(1, 0, i);
        if(answer){
            printf("%d", i);
            return 0;
        }
    }
    printf("-1");
    return 0;
}
