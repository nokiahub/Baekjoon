//큐를 배열로 이용하여 front와 back을 구할 때 반드시 큐가 비어있는지 확인해야 

#include <stdio.h>
#include <string.h>
#define MAX_N 2000001

int q[MAX_N], n, front = -1, rear = -1, q_size = 0;

int isEmpty(){
    if(front == rear) return 1;
    return 0;
}

void push(int element){
    q[++rear] = element;
    q_size++;
    return;
}

int pop(){
    if(isEmpty() == 1) return -1;
    q_size--;
    return q[++front];
}

int q_front(){
    if(isEmpty() == 1) return -1;
    return q[front + 1];
}

int q_back(){
    if(isEmpty() == 1) return -1;
    return q[rear];
}

int main(){
    scanf("%d", &n);
    for(int i = 0 ; i < n ; i++){
        char s[5] = "";
        scanf("%s", s);
        if(!strcmp(s, "push")){
            int num;
            scanf("%d", &num);
            push(num);
            
        }else if(!strcmp(s, "pop")){
            printf("%d\n", pop());
        }else if(!strcmp(s, "front")){
            printf("%d\n", q_front());
        }else if(!strcmp(s, "back")){
            printf("%d\n", q_back());
        }else if(!strcmp(s, "size")){
            printf("%d\n", q_size);
        }else if(!strcmp(s, "empty")){
            printf("%d\n", isEmpty());
        }
    }
    
    return 0;
}
