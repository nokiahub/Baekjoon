#include <iostream>
#include <cstring>
#define N_S 100
using namespace std;

int n, red = 0, without_red = 0, dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};
char arr[N_S][N_S];
bool visited[N_S][N_S];

void dfs(int x, int y){
    visited[x][y] = true;
    
    for(int i = 0 ; i < 4 ; i++){
        int nx = x + dx[i];
        int ny = y + dy[i];
        
        if(nx >=0 && nx < n && ny >=0 && ny < n && !visited[nx][ny] && arr[nx][ny] == arr[x][y]){
            dfs(nx, ny);
        }
    }
    return;
}

int main(){
    cin >> n;
    
    for(int i = 0 ;  i < n ; i++){
        string s;
        cin >> s;
        for(int j = 0 ; j < n ; j++){
            arr[i][j] = s[j];
        }
    }
    
    for(int i = 0 ;  i < n ; i++){
        for(int j = 0 ; j < n ; j++){
            if(!visited[i][j]){
                dfs(i, j);
                red++;
            }
        }
    }
    
    memset(visited, false, sizeof(visited));
    for(int i = 0 ;  i < n ; i++){
        for(int j = 0 ; j < n ; j++){
            if(arr[i][j] == 'G')
                arr[i][j] = 'R';
        }
    }
    
    for(int i = 0 ;  i < n ; i++){
        for(int j = 0 ; j < n ; j++){
            if(!visited[i][j]){
                dfs(i, j);
                without_red++;
            }
        }
    }
    
    cout << red << ' ' << without_red;
    return 0;
}
